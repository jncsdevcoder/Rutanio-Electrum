# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import cosignerpool_pb2 as cosignerpool__pb2


class CosignerpoolStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Put = channel.unary_unary(
                '/cosignerpool.Cosignerpool/Put',
                request_serializer=cosignerpool__pb2.PutRequest.SerializeToString,
                response_deserializer=cosignerpool__pb2.PutResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/cosignerpool.Cosignerpool/Get',
                request_serializer=cosignerpool__pb2.GetRequest.SerializeToString,
                response_deserializer=cosignerpool__pb2.GetResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/cosignerpool.Cosignerpool/Delete',
                request_serializer=cosignerpool__pb2.DeleteRequest.SerializeToString,
                response_deserializer=cosignerpool__pb2.DeleteResponse.FromString,
                )
        self.Ping = channel.unary_unary(
                '/cosignerpool.Cosignerpool/Ping',
                request_serializer=cosignerpool__pb2.Empty.SerializeToString,
                response_deserializer=cosignerpool__pb2.Pong.FromString,
                )
        self.GetTime = channel.unary_unary(
                '/cosignerpool.Cosignerpool/GetTime',
                request_serializer=cosignerpool__pb2.Empty.SerializeToString,
                response_deserializer=cosignerpool__pb2.GetTimeResponse.FromString,
                )


class CosignerpoolServicer(object):
    """The greeting service definition.
    """

    def Put(self, request, context):
        """Writes a value into a key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Reads the value of a key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Deletes a key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """Sends a 'ping'
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTime(self, request, context):
        """Gets the time on the server 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CosignerpoolServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=cosignerpool__pb2.PutRequest.FromString,
                    response_serializer=cosignerpool__pb2.PutResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=cosignerpool__pb2.GetRequest.FromString,
                    response_serializer=cosignerpool__pb2.GetResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=cosignerpool__pb2.DeleteRequest.FromString,
                    response_serializer=cosignerpool__pb2.DeleteResponse.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=cosignerpool__pb2.Empty.FromString,
                    response_serializer=cosignerpool__pb2.Pong.SerializeToString,
            ),
            'GetTime': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTime,
                    request_deserializer=cosignerpool__pb2.Empty.FromString,
                    response_serializer=cosignerpool__pb2.GetTimeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cosignerpool.Cosignerpool', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Cosignerpool(object):
    """The greeting service definition.
    """

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cosignerpool.Cosignerpool/Put',
            cosignerpool__pb2.PutRequest.SerializeToString,
            cosignerpool__pb2.PutResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cosignerpool.Cosignerpool/Get',
            cosignerpool__pb2.GetRequest.SerializeToString,
            cosignerpool__pb2.GetResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cosignerpool.Cosignerpool/Delete',
            cosignerpool__pb2.DeleteRequest.SerializeToString,
            cosignerpool__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cosignerpool.Cosignerpool/Ping',
            cosignerpool__pb2.Empty.SerializeToString,
            cosignerpool__pb2.Pong.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cosignerpool.Cosignerpool/GetTime',
            cosignerpool__pb2.Empty.SerializeToString,
            cosignerpool__pb2.GetTimeResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
